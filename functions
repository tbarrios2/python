def testfunc(myname):
    print('hello %s' % myname)
# note argument is string so must be surrounded in quotes


def testfunc(fname, lname):
    print('hello %s %s' % (fname,lname))

firstname = 'thomas'
lastname = 'barrios'

testfunc(firstname, lastname)

def savings(pocket_money, paper_route, spending):
    return pocket_money + paper_route - spending
print(savings(10,10,5))

def variable_test():
    first_variable = 10
    second_variable = 20
    return first_variable * second_variable

print(variable_test())

another_variable = 100
def variable_test2():
    first_variable = 10
    second_variable = 20
    return first_variable * second_variable * another_variable
print(variable_test2())

def spaceship_building(cans):
    total_cans = 0
    for week in range(1,53):
        total_cans = total_cans + cans
        print('week %s = %s cans' % (week, total_cans))
        
spaceship_building(2)
spaceship_building(13)

import time
print(time.asctime())

import sys

if age >= 10 and age <= 13:
    print('What is 13 + 49 + 84 + 155 + 97? A headache!')
else:
    print('Huh?')

class Things:
    pass
class Inanimate(Things):
    pass
class Animate(Things):
    pass
class Animals(Animate):
    def breathe(self):
        print('breathing')
    def move(self):
        print('moving')
    def eat_food(self):
        print('eating food')
class Mammals(Animals):
    def feed_young_with_milk(self):
        pass
class Giraffes(Mammals):
    def eat_leaves_from_trees(self):
        pass
class Sidewalks(Inanimate):
    pass
#adding object to class
reginald = Giraffes()
reginald.move()
reginald.eat_leaves_from_trees()
harold = Giraffes()
harold.move()


#defining functions of classes
def this_is_a_normal_function():
    print('I am a normal function')
class ThisIsMySillyClass:
    def this_is_a_class_function():
        print('I am a class function')
    def this_is_also_a_class_function():
        print('I am also a class function')
        
        
    

      
import turtle
avery = turtle.Pen()
kate = turtle.Pen()
avery.forward(50)
avery.right(90)
avery.forward(20)
kate.left(90)
kate.forward(100)
jacob = turtle.Pen()
jacob.left(180)
jacob.forward(80)

#2 turtle pitchfork
turtle.clearscreen()
turtle.reset()

avery = turtle.Pen()
kate = turtle.Pen()
avery2 = turtle.Pen()
kate2 = turtle.Pen()

#inside fork
avery.forward(50)
avery2.forward(50)
avery.left(90)
avery2.right(90)
avery.forward(30)
avery2.forward(30)
avery.right(90)
avery2.left(90)
avery.forward(30)
avery2.forward(30)

#outside fork
kate.forward(40)
kate2.forward(40)
kate.left(90)
kate2.right(90)
kate.forward(40)
kate2.forward(40)
kate2.left(90)
kate.right(90)
kate.forward(50)
kate2.forward(50)


turtle.clearscreen()

print(abs(10))
print(abs(-10))

steps = -3
if abs(steps) > 0:
    print('Character is moving')

steps = -3
if steps > 0 or steps < 0:
    print('Character is moving')

print(bool(0))
print(bool(1))
print(bool("er"))
print(bool(" "))
print(bool(""))
print(bool(-5))
print(bool(None))
print(bool(False))
    
my_silly_list = []
print(bool(my_silly_list))

my_silly_list = ['s','t','l', 'i', 'y']
print(bool(my_silly_list))

year = input('Year of birth: ')
if not bool(year.rstrip()):
	print('You need to enter a value for your year of birth')

dir(1)
dir('string')
popcorn = 'I love popcorn'
dir('I love popcorn')
dir(popcorn)
popcorn.lower()
popcorn.upper()
help(popcorn.upper)
'string'.upper()
dir(abs)

eval('10*4')
eval('popcorn.upper()')
eval("'string'.upper()")
eval('popcorn')

your_calculation = input('Enter a calculation: ')

print(eval(your_calculation))

my_small_program = '''print("ham")
print("sandwhich")'''
exec(my_small_program)


your_age = input('Enter your age: ')
age = float(your_age)
if age >13:
    print('You\'re %s years too old.' % (age - 13))
int(123.345)
int('123')
int(float('12.23'))

    




